// Generated by CoffeeScript 2.4.1
(function() {
  //!/usr/bin/env coffee
  // -*- coding: utf-8 -*-

  //  db_obj.coffee

  var DB_Object, pg;

  pg = require('pg');

  //-------------------------------------------------------------------------------
  // CLASS DB_Object

  DB_Object = class DB_Object {
    constructor(pg_options, db_schema) {
      this.get_db_schema = this.get_db_schema.bind(this);
      this.query = this.query.bind(this);
      this.pg_options = pg_options;
      this.db_schema = db_schema;
      this.pool = new pg.Pool(this.pg_options);
    }

    get_db_schema() {
      return new Promise((resolve, reject) => {
        try {
          return resolve(this.db_schema);
        } catch (error1) {
          return reject("Could not get @db_schema.");
        }
      });
    }

    async query(text, values) {
      var client, error, msg, result;
      try {
        client = (await this.pool.connect().catch(function() {
          throw new Error("Failed to connect.");
        }));
        result = (await client.query(text, values).catch(function() {
          throw new Error("Failed to query.");
        }));
        client.release();
        return result.rows;
      } catch (error1) {
        error = error1;
        msg = `Query failed.\n text: "${text}"\n values: [${values}]\n`;
        throw new Error(msg);
      }
    }

  };

  exports.DB_Object = DB_Object;

}).call(this);
