// Generated by CoffeeScript 2.4.1
(function() {
  //!/usr/bin/env coffee
  // -*- coding: utf-8 -*-

  //  db_rmi_client.coffee

  var DB_ORM, DB_RMI_Client, DB_RMI_Connection, WS_RMI_Client, WS_RMI_Connection, ws_rmi,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  ws_rmi = require('ws-rmi');

  WS_RMI_Connection = ws_rmi.Connection;

  WS_RMI_Client = ws_rmi.Client;

  ({DB_ORM} = require('./db_orm'));

  DB_RMI_Connection = class DB_RMI_Connection extends WS_RMI_Connection {
    constructor() {
      super(...arguments);
      this.init_db = this.init_db.bind(this);
    }

    init_db() {
      boundMethodCheck(this, DB_RMI_Connection);
      return this.init_stubs().then(() => {
        this.db = new DB_ORM(this.stubs.db_obj);
        return this.db;
      });
    }

  };

  DB_RMI_Client = class DB_RMI_Client extends WS_RMI_Client {
    constructor(options, log_level) {
      console.log("DB_RMI_Client");
      super(options, [], DB_RMI_Connection, log_level);
    }

  };

  exports.DB_RMI_Client = DB_RMI_Client;

}).call(this);
